{"ast":null,"code":"var _jsxFileName = \"/Users/mozcan/Desktop/UK/gasbroker-front-end/src/app/fuse-layouts/shared-components/SettingsPanel.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport FuseScrollbars from '@fuse/core/FuseScrollbars';\nimport FuseSettings from '@fuse/core/FuseSettings';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport { forwardRef, memo, useState } from 'react';\nimport FuseThemeSchemes from '@fuse/core/FuseThemeSchemes';\nimport { useSwipeable } from 'react-swipeable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/forwardRef(_c = _s(function Transition(props, ref) {\n  _s();\n\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: theme.direction === 'ltr' ? 'left' : 'right',\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n}));\n_c2 = Transition;\nconst useStyles = makeStyles(theme => ({\n  buttonWrapper: {\n    position: 'absolute',\n    height: 80,\n    right: 0,\n    top: 160,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    opacity: 0.9,\n    padding: 0,\n    borderTopLeftRadius: 6,\n    borderBottomLeftRadius: 6,\n    borderBottomRightRadius: 0,\n    borderTopRightRadius: 0,\n    zIndex: 999,\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[500],\n      opacity: 1\n    }\n  },\n  button: {\n    minWidth: 40,\n    width: 40,\n    height: 40,\n    margin: 0\n  },\n  settingsButton: {\n    '& $buttonIcon': {\n      animation: '$rotating 3s linear infinite'\n    }\n  },\n  schemesButton: {},\n  '@keyframes rotating': {\n    from: {\n      transform: 'rotate(0deg)'\n    },\n    to: {\n      transform: 'rotate(360deg)'\n    }\n  },\n  buttonIcon: {\n    fontSize: 20\n  },\n  dialogPaper: {\n    position: 'fixed',\n    width: 380,\n    maxWidth: '90vw',\n    backgroundColor: theme.palette.background.paper,\n    top: 0,\n    height: '100%',\n    minHeight: '100%',\n    bottom: 0,\n    right: 0,\n    margin: 0,\n    zIndex: 1000,\n    borderRadius: 0\n  }\n}));\n\nfunction SettingsPanel() {\n  _s2();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const handlerOptions = {\n    onSwipedLeft: () => {\n      return open && theme.direction === 'rtl' && handleClose();\n    },\n    onSwipedRight: () => {\n      return open && theme.direction === 'ltr' && handleClose();\n    }\n  };\n  const settingsHandlers = useSwipeable(handlerOptions);\n  const shemesHandlers = useSwipeable(handlerOptions);\n\n  const handleOpen = panelId => {\n    setOpen(panelId);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonWrapper,\n      id: \"fuse-settings-schemes\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: clsx(classes.button, classes.settingsButton),\n        onClick: () => handleOpen('settings'),\n        variant: \"text\",\n        color: \"inherit\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          className: classes.buttonIcon,\n          children: \"settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: clsx(classes.button, classes.schemesButton),\n        onClick: () => handleOpen('schemes'),\n        variant: \"text\",\n        color: \"inherit\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          className: classes.buttonIcon,\n          children: \"palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      TransitionComponent: Transition,\n      \"aria-labelledby\": \"settings-panel\",\n      \"aria-describedby\": \"settings\",\n      open: open === 'settings',\n      keepMounted: true,\n      onClose: handleClose,\n      BackdropProps: {\n        invisible: true\n      },\n      classes: {\n        paper: clsx(classes.dialogPaper, 'shadow-lg')\n      },\n      ...settingsHandlers,\n      children: /*#__PURE__*/_jsxDEV(FuseScrollbars, {\n        className: \"p-16 sm:p-32\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"fixed top-0 ltr:right-0 rtl:left-0 z-10\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"mb-32 font-semibold\",\n          variant: \"h6\",\n          children: \"Theme Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FuseSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      TransitionComponent: Transition,\n      \"aria-labelledby\": \"schemes-panel\",\n      \"aria-describedby\": \"schemes\",\n      open: open === 'schemes',\n      keepMounted: true,\n      onClose: handleClose,\n      BackdropProps: {\n        invisible: true\n      },\n      classes: {\n        paper: clsx(classes.dialogPaper, 'shadow-lg')\n      },\n      ...shemesHandlers,\n      children: /*#__PURE__*/_jsxDEV(FuseScrollbars, {\n        className: \"p-16 sm:p-32\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"fixed top-0 ltr:right-0 rtl:left-0 z-10\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"mb-32\",\n          variant: \"h6\",\n          children: \"Theme Color Schemes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"mb-24 text-12 italic text-justify\",\n          color: \"textSecondary\",\n          children: \"* Selected color scheme will be applied to all theme layout elements (navbar, toolbar, etc.). You can also select a different color scheme for each layout element at theme settings.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FuseThemeSchemes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(SettingsPanel, \"lIFyPD57oc4NOYcSGudvnK3ajAA=\", false, function () {\n  return [useStyles, useTheme, useSwipeable, useSwipeable];\n});\n\n_c3 = SettingsPanel;\nexport default _c4 = /*#__PURE__*/memo(SettingsPanel);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"SettingsPanel\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/app/fuse-layouts/shared-components/SettingsPanel.js"],"names":["FuseScrollbars","FuseSettings","Button","red","Dialog","Icon","IconButton","Slide","makeStyles","useTheme","Typography","clsx","forwardRef","memo","useState","FuseThemeSchemes","useSwipeable","Transition","props","ref","theme","direction","useStyles","buttonWrapper","position","height","right","top","display","flexDirection","alignItems","justifyContent","overflow","opacity","padding","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","zIndex","color","palette","getContrastText","backgroundColor","button","minWidth","width","margin","settingsButton","animation","schemesButton","from","transform","to","buttonIcon","fontSize","dialogPaper","maxWidth","background","paper","minHeight","bottom","borderRadius","SettingsPanel","classes","open","setOpen","handlerOptions","onSwipedLeft","handleClose","onSwipedRight","settingsHandlers","shemesHandlers","handleOpen","panelId","invisible"],"mappings":"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","sourcesContent":["import FuseScrollbars from '@fuse/core/FuseScrollbars';\nimport FuseSettings from '@fuse/core/FuseSettings';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport { forwardRef, memo, useState } from 'react';\nimport FuseThemeSchemes from '@fuse/core/FuseThemeSchemes';\nimport { useSwipeable } from 'react-swipeable';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n\tconst theme = useTheme();\n\treturn <Slide direction={theme.direction === 'ltr' ? 'left' : 'right'} ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n\tbuttonWrapper: {\n\t\tposition: 'absolute',\n\t\theight: 80,\n\t\tright: 0,\n\t\ttop: 160,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\toverflow: 'hidden',\n\t\topacity: 0.9,\n\t\tpadding: 0,\n\t\tborderTopLeftRadius: 6,\n\t\tborderBottomLeftRadius: 6,\n\t\tborderBottomRightRadius: 0,\n\t\tborderTopRightRadius: 0,\n\t\tzIndex: 999,\n\t\tcolor: theme.palette.getContrastText(red[500]),\n\t\tbackgroundColor: red[500],\n\t\t'&:hover': {\n\t\t\tbackgroundColor: red[500],\n\t\t\topacity: 1\n\t\t}\n\t},\n\tbutton: {\n\t\tminWidth: 40,\n\t\twidth: 40,\n\t\theight: 40,\n\t\tmargin: 0\n\t},\n\tsettingsButton: {\n\t\t'& $buttonIcon': {\n\t\t\tanimation: '$rotating 3s linear infinite'\n\t\t}\n\t},\n\tschemesButton: {},\n\t'@keyframes rotating': {\n\t\tfrom: {\n\t\t\ttransform: 'rotate(0deg)'\n\t\t},\n\t\tto: {\n\t\t\ttransform: 'rotate(360deg)'\n\t\t}\n\t},\n\tbuttonIcon: {\n\t\tfontSize: 20\n\t},\n\tdialogPaper: {\n\t\tposition: 'fixed',\n\t\twidth: 380,\n\t\tmaxWidth: '90vw',\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\ttop: 0,\n\t\theight: '100%',\n\t\tminHeight: '100%',\n\t\tbottom: 0,\n\t\tright: 0,\n\t\tmargin: 0,\n\t\tzIndex: 1000,\n\t\tborderRadius: 0\n\t}\n}));\n\nfunction SettingsPanel() {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst [open, setOpen] = useState(false);\n\tconst handlerOptions = {\n\t\tonSwipedLeft: () => {\n\t\t\treturn open && theme.direction === 'rtl' && handleClose();\n\t\t},\n\t\tonSwipedRight: () => {\n\t\t\treturn open && theme.direction === 'ltr' && handleClose();\n\t\t}\n\t};\n\n\tconst settingsHandlers = useSwipeable(handlerOptions);\n\tconst shemesHandlers = useSwipeable(handlerOptions);\n\n\tconst handleOpen = panelId => {\n\t\tsetOpen(panelId);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.buttonWrapper} id=\"fuse-settings-schemes\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName={clsx(classes.button, classes.settingsButton)}\n\t\t\t\t\tonClick={() => handleOpen('settings')}\n\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t>\n\t\t\t\t\t<Icon className={classes.buttonIcon}>settings</Icon>\n\t\t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tclassName={clsx(classes.button, classes.schemesButton)}\n\t\t\t\t\tonClick={() => handleOpen('schemes')}\n\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t>\n\t\t\t\t\t<Icon className={classes.buttonIcon}>palette</Icon>\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<Dialog\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\taria-labelledby=\"settings-panel\"\n\t\t\t\taria-describedby=\"settings\"\n\t\t\t\topen={open === 'settings'}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={handleClose}\n\t\t\t\tBackdropProps={{ invisible: true }}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: clsx(classes.dialogPaper, 'shadow-lg')\n\t\t\t\t}}\n\t\t\t\t{...settingsHandlers}\n\t\t\t>\n\t\t\t\t<FuseScrollbars className=\"p-16 sm:p-32\">\n\t\t\t\t\t<IconButton className=\"fixed top-0 ltr:right-0 rtl:left-0 z-10\" onClick={handleClose}>\n\t\t\t\t\t\t<Icon>close</Icon>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Typography className=\"mb-32 font-semibold\" variant=\"h6\">\n\t\t\t\t\t\tTheme Settings\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<FuseSettings />\n\t\t\t\t</FuseScrollbars>\n\t\t\t</Dialog>\n\n\t\t\t<Dialog\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\taria-labelledby=\"schemes-panel\"\n\t\t\t\taria-describedby=\"schemes\"\n\t\t\t\topen={open === 'schemes'}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={handleClose}\n\t\t\t\tBackdropProps={{ invisible: true }}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: clsx(classes.dialogPaper, 'shadow-lg')\n\t\t\t\t}}\n\t\t\t\t{...shemesHandlers}\n\t\t\t>\n\t\t\t\t<FuseScrollbars className=\"p-16 sm:p-32\">\n\t\t\t\t\t<IconButton className=\"fixed top-0 ltr:right-0 rtl:left-0 z-10\" onClick={handleClose}>\n\t\t\t\t\t\t<Icon>close</Icon>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Typography className=\"mb-32\" variant=\"h6\">\n\t\t\t\t\t\tTheme Color Schemes\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className=\"mb-24 text-12 italic text-justify\" color=\"textSecondary\">\n\t\t\t\t\t\t* Selected color scheme will be applied to all theme layout elements (navbar, toolbar, etc.).\n\t\t\t\t\t\tYou can also select a different color scheme for each layout element at theme settings.\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<FuseThemeSchemes />\n\t\t\t\t</FuseScrollbars>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n}\n\nexport default memo(SettingsPanel);\n"]},"metadata":{},"sourceType":"module"}
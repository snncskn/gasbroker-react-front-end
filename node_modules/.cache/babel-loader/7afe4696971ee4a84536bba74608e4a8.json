{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport config from './firebaseServiceConfig';\n\nclass FirebaseService {\n  constructor() {\n    this.getUserData = userId => {\n      if (!firebase.apps.length) {\n        return false;\n      }\n\n      return new Promise((resolve, reject) => {\n        this.db.ref(`users/${userId}`).once('value').then(snapshot => {\n          const user = snapshot.val();\n          resolve(user);\n        });\n      });\n    };\n\n    this.updateUserData = user => {\n      if (!firebase.apps.length) {\n        return false;\n      }\n\n      return this.db.ref(`users/${user.uid}`).set(user);\n    };\n\n    this.onAuthStateChanged = callback => {\n      if (!this.auth) {\n        return;\n      }\n\n      this.auth.onAuthStateChanged(callback);\n    };\n\n    this.signOut = () => {\n      if (!this.auth) {\n        return;\n      }\n\n      this.auth.signOut();\n    };\n  }\n\n  init(success) {\n    if (Object.entries(config).length === 0 && config.constructor === Object) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn('Missing Firebase Configuration at src/app/services/firebaseService/firebaseServiceConfig.js');\n      }\n\n      success(false);\n      return;\n    }\n\n    if (firebase.apps.length) {\n      return;\n    }\n\n    firebase.initializeApp(config);\n    this.db = firebase.database();\n    this.auth = firebase.auth();\n    success(true);\n  }\n\n}\n\nconst instance = new FirebaseService();\nexport default instance;","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/app/services/firebaseService/firebaseService.js"],"names":["firebase","config","FirebaseService","getUserData","userId","apps","length","Promise","resolve","reject","db","ref","once","then","snapshot","user","val","updateUserData","uid","set","onAuthStateChanged","callback","auth","signOut","init","success","Object","entries","constructor","process","env","NODE_ENV","console","warn","initializeApp","database","instance"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,eAAN,CAAsB;AAAA;AAAA,SAqBrBC,WArBqB,GAqBPC,MAAM,IAAI;AACvB,UAAI,CAACJ,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AAC1B,eAAO,KAAP;AACA;;AACD,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,aAAKC,EAAL,CACEC,GADF,CACO,SAAQP,MAAO,EADtB,EAEEQ,IAFF,CAEO,OAFP,EAGEC,IAHF,CAGOC,QAAQ,IAAI;AACjB,gBAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAR,UAAAA,OAAO,CAACO,IAAD,CAAP;AACA,SANF;AAOA,OARM,CAAP;AASA,KAlCoB;;AAAA,SAoCrBE,cApCqB,GAoCJF,IAAI,IAAI;AACxB,UAAI,CAACf,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AAC1B,eAAO,KAAP;AACA;;AACD,aAAO,KAAKI,EAAL,CAAQC,GAAR,CAAa,SAAQI,IAAI,CAACG,GAAI,EAA9B,EAAiCC,GAAjC,CAAqCJ,IAArC,CAAP;AACA,KAzCoB;;AAAA,SA2CrBK,kBA3CqB,GA2CAC,QAAQ,IAAI;AAChC,UAAI,CAAC,KAAKC,IAAV,EAAgB;AACf;AACA;;AACD,WAAKA,IAAL,CAAUF,kBAAV,CAA6BC,QAA7B;AACA,KAhDoB;;AAAA,SAkDrBE,OAlDqB,GAkDX,MAAM;AACf,UAAI,CAAC,KAAKD,IAAV,EAAgB;AACf;AACA;;AACD,WAAKA,IAAL,CAAUC,OAAV;AACA,KAvDoB;AAAA;;AACrBC,EAAAA,IAAI,CAACC,OAAD,EAAU;AACb,QAAIC,MAAM,CAACC,OAAP,CAAe1B,MAAf,EAAuBK,MAAvB,KAAkC,CAAlC,IAAuCL,MAAM,CAAC2B,WAAP,KAAuBF,MAAlE,EAA0E;AACzE,UAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC3CC,QAAAA,OAAO,CAACC,IAAR,CACC,6FADD;AAGA;;AACDR,MAAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACA;;AAED,QAAIzB,QAAQ,CAACK,IAAT,CAAcC,MAAlB,EAA0B;AACzB;AACA;;AACDN,IAAAA,QAAQ,CAACkC,aAAT,CAAuBjC,MAAvB;AACA,SAAKS,EAAL,GAAUV,QAAQ,CAACmC,QAAT,EAAV;AACA,SAAKb,IAAL,GAAYtB,QAAQ,CAACsB,IAAT,EAAZ;AACAG,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA;;AAnBoB;;AA0DtB,MAAMW,QAAQ,GAAG,IAAIlC,eAAJ,EAAjB;AAEA,eAAekC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport config from './firebaseServiceConfig';\n\nclass FirebaseService {\n\tinit(success) {\n\t\tif (Object.entries(config).length === 0 && config.constructor === Object) {\n\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Missing Firebase Configuration at src/app/services/firebaseService/firebaseServiceConfig.js'\n\t\t\t\t);\n\t\t\t}\n\t\t\tsuccess(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (firebase.apps.length) {\n\t\t\treturn;\n\t\t}\n\t\tfirebase.initializeApp(config);\n\t\tthis.db = firebase.database();\n\t\tthis.auth = firebase.auth();\n\t\tsuccess(true);\n\t}\n\n\tgetUserData = userId => {\n\t\tif (!firebase.apps.length) {\n\t\t\treturn false;\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.ref(`users/${userId}`)\n\t\t\t\t.once('value')\n\t\t\t\t.then(snapshot => {\n\t\t\t\t\tconst user = snapshot.val();\n\t\t\t\t\tresolve(user);\n\t\t\t\t});\n\t\t});\n\t};\n\n\tupdateUserData = user => {\n\t\tif (!firebase.apps.length) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.db.ref(`users/${user.uid}`).set(user);\n\t};\n\n\tonAuthStateChanged = callback => {\n\t\tif (!this.auth) {\n\t\t\treturn;\n\t\t}\n\t\tthis.auth.onAuthStateChanged(callback);\n\t};\n\n\tsignOut = () => {\n\t\tif (!this.auth) {\n\t\t\treturn;\n\t\t}\n\t\tthis.auth.signOut();\n\t};\n}\n\nconst instance = new FirebaseService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}
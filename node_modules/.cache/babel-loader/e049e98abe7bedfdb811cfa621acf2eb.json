{"ast":null,"code":"var _jsxFileName = \"/Users/mozcan/Desktop/UK/gasbroker-front-end/src/@fuse/core/FuseLayout/FuseLayout.js\",\n    _s = $RefreshSig$();\n\nimport { useDeepCompareEffect } from '@fuse/hooks';\nimport FuseLayouts from '@fuse/layouts/FuseLayouts';\nimport _ from '@lodash';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from 'app/AppContext';\nimport { generateSettings, setSettings } from 'app/store/fuse/settingsSlice';\nimport { memo, useContext, useMemo, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { matchRoutes } from 'react-router-config';\nimport { useLocation } from 'react-router-dom';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    'code:not([class*=\"language-\"])': {\n      color: theme.palette.secondary.dark,\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(255, 255, 255, .9)' : 'rgba(0, 0, 0, .9)',\n      padding: '2px 3px',\n      borderRadius: 2,\n      lineHeight: 1.7\n    },\n    'table.simple tbody tr td': {\n      borderColor: theme.palette.divider\n    },\n    'table.simple thead tr th': {\n      borderColor: theme.palette.divider\n    },\n    'a:not([role=button])': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    'a.link, a:not([role=button])[target=_blank]': {\n      background: fade(theme.palette.secondary.main, 0.2),\n      color: 'inherit',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      textDecoration: 'none',\n      '&:hover': {\n        background: fade(theme.palette.secondary.main, 0.3),\n        textDecoration: 'none'\n      }\n    },\n    '[class^=\"border-\"]': {\n      borderColor: theme.palette.divider\n    },\n    '[class*=\"border-\"]': {\n      borderColor: theme.palette.divider\n    },\n    hr: {\n      borderColor: theme.palette.divider\n    },\n    '::-webkit-scrollbar-thumb': {\n      boxShadow: `inset 0 0 0 20px ${theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.24)' : 'rgba(255, 255, 255, 0.24)'}`\n    },\n    '::-webkit-scrollbar-thumb:active': {\n      boxShadow: `inset 0 0 0 20px ${theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.37)' : 'rgba(255, 255, 255, 0.37)'}`\n    },\n    html: {\n      backgroundColor: `${theme.palette.background.default}!important`,\n      color: `${theme.palette.text.primary}!important`\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary\n  }\n}));\n\nfunction FuseLayout(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const settings = useSelector(({\n    fuse\n  }) => fuse.settings.current);\n  const defaultSettings = useSelector(({\n    fuse\n  }) => fuse.settings.defaults);\n  const appContext = useContext(AppContext);\n  const {\n    routes\n  } = appContext;\n  const classes = useStyles(props);\n  const location = useLocation();\n  const {\n    pathname\n  } = location;\n  const matched = matchRoutes(routes, pathname)[0];\n  const newSettings = useRef(null);\n  const shouldAwaitRender = useCallback(() => {\n    let _newSettings;\n    /**\n     * On Path changed\n     */\n    // if (prevPathname !== pathname) {\n\n\n    if (matched && matched.route.settings) {\n      /**\n       * if matched route has settings\n       */\n      const routeSettings = matched.route.settings;\n      _newSettings = generateSettings(defaultSettings, routeSettings);\n    } else if (!_.isEqual(newSettings.current, defaultSettings)) {\n      /**\n       * Reset to default settings on the new path\n       */\n      _newSettings = _.merge({}, defaultSettings);\n    } else {\n      _newSettings = newSettings.current;\n    }\n\n    if (!_.isEqual(newSettings.current, _newSettings)) {\n      newSettings.current = _newSettings;\n    }\n  }, [defaultSettings, matched]);\n  shouldAwaitRender();\n  useDeepCompareEffect(() => {\n    if (!_.isEqual(newSettings.current, settings)) {\n      dispatch(setSettings(newSettings.current));\n    }\n  }, [dispatch, newSettings.current, settings]); // console.warn('::FuseLayout:: rendered');\n\n  const Layout = useMemo(() => FuseLayouts[settings.layout.style], [settings.layout.style]);\n  return _.isEqual(newSettings.current, settings) ? /*#__PURE__*/_jsxDEV(Layout, {\n    classes: {\n      root: classes.root\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 52\n  }, this) : null;\n}\n\n_s(FuseLayout, \"/Q5UX2I+sAot5RFO6TzP3/BORuw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useStyles, useLocation, useDeepCompareEffect];\n});\n\n_c = FuseLayout;\nexport default _c2 = /*#__PURE__*/memo(FuseLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FuseLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/@fuse/core/FuseLayout/FuseLayout.js"],"names":["useDeepCompareEffect","FuseLayouts","_","makeStyles","AppContext","generateSettings","setSettings","memo","useContext","useMemo","useCallback","useRef","useDispatch","useSelector","matchRoutes","useLocation","fade","useStyles","theme","color","palette","secondary","dark","backgroundColor","type","padding","borderRadius","lineHeight","borderColor","divider","main","textDecoration","background","borderBottom","hr","boxShadow","html","default","text","primary","root","FuseLayout","props","dispatch","settings","fuse","current","defaultSettings","defaults","appContext","routes","classes","location","pathname","matched","newSettings","shouldAwaitRender","_newSettings","route","routeSettings","isEqual","merge","Layout","layout","style"],"mappings":"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","sourcesContent":["import { useDeepCompareEffect } from '@fuse/hooks';\nimport FuseLayouts from '@fuse/layouts/FuseLayouts';\nimport _ from '@lodash';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from 'app/AppContext';\nimport { generateSettings, setSettings } from 'app/store/fuse/settingsSlice';\nimport { memo, useContext, useMemo, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { matchRoutes } from 'react-router-config';\nimport { useLocation } from 'react-router-dom';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nconst useStyles = makeStyles(theme => ({\n\t'@global': {\n\t\t'code:not([class*=\"language-\"])': {\n\t\t\tcolor: theme.palette.secondary.dark,\n\t\t\tbackgroundColor: theme.palette.type === 'light' ? 'rgba(255, 255, 255, .9)' : 'rgba(0, 0, 0, .9)',\n\t\t\tpadding: '2px 3px',\n\t\t\tborderRadius: 2,\n\t\t\tlineHeight: 1.7\n\t\t},\n\t\t'table.simple tbody tr td': {\n\t\t\tborderColor: theme.palette.divider\n\t\t},\n\t\t'table.simple thead tr th': {\n\t\t\tborderColor: theme.palette.divider\n\t\t},\n\t\t'a:not([role=button])': {\n\t\t\tcolor: theme.palette.secondary.main,\n\t\t\ttextDecoration: 'none',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'underline'\n\t\t\t}\n\t\t},\n\t\t'a.link, a:not([role=button])[target=_blank]': {\n\t\t\tbackground: fade(theme.palette.secondary.main, 0.2),\n\t\t\tcolor: 'inherit',\n\t\t\tborderBottom: `1px solid ${theme.palette.divider}`,\n\t\t\ttextDecoration: 'none',\n\t\t\t'&:hover': {\n\t\t\t\tbackground: fade(theme.palette.secondary.main, 0.3),\n\t\t\t\ttextDecoration: 'none'\n\t\t\t}\n\t\t},\n\t\t'[class^=\"border-\"]': {\n\t\t\tborderColor: theme.palette.divider\n\t\t},\n\t\t'[class*=\"border-\"]': {\n\t\t\tborderColor: theme.palette.divider\n\t\t},\n\t\thr: {\n\t\t\tborderColor: theme.palette.divider\n\t\t},\n\t\t'::-webkit-scrollbar-thumb': {\n\t\t\tboxShadow: `inset 0 0 0 20px ${\n\t\t\t\ttheme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.24)' : 'rgba(255, 255, 255, 0.24)'\n\t\t\t}`\n\t\t},\n\t\t'::-webkit-scrollbar-thumb:active': {\n\t\t\tboxShadow: `inset 0 0 0 20px ${\n\t\t\t\ttheme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.37)' : 'rgba(255, 255, 255, 0.37)'\n\t\t\t}`\n\t\t},\n\t\thtml: {\n\t\t\tbackgroundColor: `${theme.palette.background.default}!important`,\n\t\t\tcolor: `${theme.palette.text.primary}!important`\n\t\t}\n\t},\n\troot: {\n\t\tbackgroundColor: theme.palette.background.default,\n\t\tcolor: theme.palette.text.primary\n\t}\n}));\n\nfunction FuseLayout(props) {\n\tconst dispatch = useDispatch();\n\tconst settings = useSelector(({ fuse }) => fuse.settings.current);\n\tconst defaultSettings = useSelector(({ fuse }) => fuse.settings.defaults);\n\n\tconst appContext = useContext(AppContext);\n\tconst { routes } = appContext;\n\tconst classes = useStyles(props);\n\tconst location = useLocation();\n\tconst { pathname } = location;\n\tconst matched = matchRoutes(routes, pathname)[0];\n\tconst newSettings = useRef(null);\n\n\tconst shouldAwaitRender = useCallback(() => {\n\t\tlet _newSettings;\n\t\t/**\n\t\t * On Path changed\n\t\t */\n\t\t// if (prevPathname !== pathname) {\n\t\tif (matched && matched.route.settings) {\n\t\t\t/**\n\t\t\t * if matched route has settings\n\t\t\t */\n\n\t\t\tconst routeSettings = matched.route.settings;\n\n\t\t\t_newSettings = generateSettings(defaultSettings, routeSettings);\n\t\t} else if (!_.isEqual(newSettings.current, defaultSettings)) {\n\t\t\t/**\n\t\t\t * Reset to default settings on the new path\n\t\t\t */\n\t\t\t_newSettings = _.merge({}, defaultSettings);\n\t\t} else {\n\t\t\t_newSettings = newSettings.current;\n\t\t}\n\n\t\tif (!_.isEqual(newSettings.current, _newSettings)) {\n\t\t\tnewSettings.current = _newSettings;\n\t\t}\n\t}, [defaultSettings, matched]);\n\n\tshouldAwaitRender();\n\n\tuseDeepCompareEffect(() => {\n\t\tif (!_.isEqual(newSettings.current, settings)) {\n\t\t\tdispatch(setSettings(newSettings.current));\n\t\t}\n\t}, [dispatch, newSettings.current, settings]);\n\n\t// console.warn('::FuseLayout:: rendered');\n\n\tconst Layout = useMemo(() => FuseLayouts[settings.layout.style], [settings.layout.style]);\n\n\treturn _.isEqual(newSettings.current, settings) ? <Layout classes={{ root: classes.root }} {...props} /> : null;\n}\n\nexport default memo(FuseLayout);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Auth0Lock from 'auth0-lock';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AUTH_CONFIG from './auth0ServiceConfig';\n\nclass Auth0Service {\n  constructor() {\n    this.sdk = {\n      auth0Manage: null\n    };\n\n    this.login = () => {\n      if (!this.lock) {\n        console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n        return false;\n      } // Call the show method to display the widget.\n\n\n      return this.lock.show();\n    };\n\n    this.register = () => {\n      if (!this.lock) {\n        console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n        return false;\n      }\n\n      return this.lock.show({\n        initialScreen: 'signUp'\n      });\n    };\n\n    this.handleAuthentication = () => {\n      if (!this.lock) {\n        return false;\n      } // Add a callback for Lock's `authenticated` event\n\n\n      this.lock.on('authenticated', this.setSession); // Add a callback for Lock's `authorization_error` event\n\n      this.lock.on('authorization_error', err => {\n        console.warn(`Error: ${err.error}. Check the console for further details.`);\n      });\n      return true;\n    };\n\n    this.onAuthenticated = callback => {\n      if (!this.lock) {\n        return false;\n      }\n\n      return this.lock.on('authenticated', callback);\n    };\n\n    this.setSession = authResult => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        // Set the time that the access token will expire at\n        const expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n        localStorage.setItem('access_token', authResult.accessToken);\n        localStorage.setItem('id_token', authResult.idToken);\n        localStorage.setItem('expires_at', expiresAt);\n      }\n    };\n\n    this.logout = () => {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at');\n      localStorage.removeItem('auth0.ssodata');\n    };\n\n    this.isAuthenticated = () => {\n      if (!this.lock) {\n        return false;\n      } // Check whether the current time is past the\n      // access token's expiry time\n\n\n      const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n      const isNotExpired = new Date().getTime() < expiresAt;\n\n      if (isNotExpired) {\n        return true;\n      }\n\n      this.logout();\n      return false;\n    };\n\n    this.getUserData = () => {\n      return new Promise((resolve, reject) => {\n        const tokenData = this.getTokenData();\n        const {\n          sub: userId\n        } = tokenData;\n        const auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n        axios.get(auth0UserUrl, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${this.getAccessToken()}`\n          }\n        }).then(response => {\n          resolve(response.data);\n        }).catch(error => {\n          // handle error\n          console.warn('Cannot retrieve user data', error);\n          reject(error);\n        });\n      });\n    };\n\n    this.updateUserData = userMetadata => {\n      const tokenData = this.getTokenData();\n      const {\n        sub: userId\n      } = tokenData;\n      const auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n      const dataObj = JSON.stringify({\n        user_metadata: userMetadata\n      });\n      return axios.patch(auth0UserUrl, dataObj, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAccessToken()}`\n        }\n      });\n    };\n\n    this.getAccessToken = () => {\n      return localStorage.getItem('access_token');\n    };\n\n    this.getIdToken = () => {\n      return window.localStorage.getItem('id_token');\n    };\n\n    this.getTokenData = () => {\n      const token = this.getIdToken();\n      const decoded = jwtDecode(token);\n\n      if (!decoded) {\n        return null;\n      }\n\n      return decoded;\n    };\n  }\n\n  init(success) {\n    if (Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn('Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js');\n      }\n\n      success(false);\n      return;\n    }\n\n    this.lock = new Auth0Lock(AUTH_CONFIG.clientId, AUTH_CONFIG.domain, {\n      autoclose: true,\n      socialButtonStyle: 'big',\n      auth: {\n        // redirect: false,\n        redirectUrl: AUTH_CONFIG.callbackUrl,\n        responseType: 'token id_token',\n        audience: `https://${AUTH_CONFIG.domain}/api/v2/`,\n        params: {\n          scope: 'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user'\n        }\n      }\n    });\n    this.handleAuthentication();\n    success(true);\n  }\n\n}\n\nconst instance = new Auth0Service();\nexport default instance;","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/app/services/auth0Service/auth0Service.js"],"names":["Auth0Lock","axios","jwtDecode","AUTH_CONFIG","Auth0Service","sdk","auth0Manage","login","lock","console","warn","show","register","initialScreen","handleAuthentication","on","setSession","err","error","onAuthenticated","callback","authResult","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","isAuthenticated","parse","getItem","isNotExpired","getUserData","Promise","resolve","reject","tokenData","getTokenData","sub","userId","auth0UserUrl","domain","get","headers","Authorization","getAccessToken","then","response","data","catch","updateUserData","userMetadata","dataObj","user_metadata","patch","getIdToken","window","token","decoded","init","success","Object","entries","length","constructor","process","env","NODE_ENV","clientId","autoclose","socialButtonStyle","auth","redirectUrl","callbackUrl","responseType","audience","params","scope","instance"],"mappings":"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","sourcesContent":["import Auth0Lock from 'auth0-lock';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AUTH_CONFIG from './auth0ServiceConfig';\n\nclass Auth0Service {\n\tsdk = { auth0Manage: null };\n\n\tinit(success) {\n\t\tif (Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object) {\n\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\tconsole.warn('Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js');\n\t\t\t}\n\t\t\tsuccess(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lock = new Auth0Lock(AUTH_CONFIG.clientId, AUTH_CONFIG.domain, {\n\t\t\tautoclose: true,\n\t\t\tsocialButtonStyle: 'big',\n\t\t\tauth: {\n\t\t\t\t// redirect: false,\n\t\t\t\tredirectUrl: AUTH_CONFIG.callbackUrl,\n\t\t\t\tresponseType: 'token id_token',\n\t\t\t\taudience: `https://${AUTH_CONFIG.domain}/api/v2/`,\n\t\t\t\tparams: {\n\t\t\t\t\tscope:\n\t\t\t\t\t\t'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.handleAuthentication();\n\t\tsuccess(true);\n\t}\n\n\tlogin = () => {\n\t\tif (!this.lock) {\n\t\t\tconsole.warn(\"Auth0 Service didn't initialize, check your configuration\");\n\n\t\t\treturn false;\n\t\t}\n\t\t// Call the show method to display the widget.\n\t\treturn this.lock.show();\n\t};\n\n\tregister = () => {\n\t\tif (!this.lock) {\n\t\t\tconsole.warn(\"Auth0 Service didn't initialize, check your configuration\");\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.lock.show({\n\t\t\tinitialScreen: 'signUp'\n\t\t});\n\t};\n\n\thandleAuthentication = () => {\n\t\tif (!this.lock) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add a callback for Lock's `authenticated` event\n\t\tthis.lock.on('authenticated', this.setSession);\n\t\t// Add a callback for Lock's `authorization_error` event\n\t\tthis.lock.on('authorization_error', err => {\n\t\t\tconsole.warn(`Error: ${err.error}. Check the console for further details.`);\n\t\t});\n\n\t\treturn true;\n\t};\n\n\tonAuthenticated = callback => {\n\t\tif (!this.lock) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.lock.on('authenticated', callback);\n\t};\n\n\tsetSession = authResult => {\n\t\tif (authResult && authResult.accessToken && authResult.idToken) {\n\t\t\t// Set the time that the access token will expire at\n\t\t\tconst expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n\t\t\tlocalStorage.setItem('access_token', authResult.accessToken);\n\t\t\tlocalStorage.setItem('id_token', authResult.idToken);\n\t\t\tlocalStorage.setItem('expires_at', expiresAt);\n\t\t}\n\t};\n\n\tlogout = () => {\n\t\t// Clear access token and ID token from local storage\n\t\tlocalStorage.removeItem('access_token');\n\t\tlocalStorage.removeItem('id_token');\n\t\tlocalStorage.removeItem('expires_at');\n\t\tlocalStorage.removeItem('auth0.ssodata');\n\t};\n\n\tisAuthenticated = () => {\n\t\tif (!this.lock) {\n\t\t\treturn false;\n\t\t}\n\t\t// Check whether the current time is past the\n\t\t// access token's expiry time\n\t\tconst expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n\t\tconst isNotExpired = new Date().getTime() < expiresAt;\n\t\tif (isNotExpired) {\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.logout();\n\t\treturn false;\n\t};\n\n\tgetUserData = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst tokenData = this.getTokenData();\n\t\t\tconst { sub: userId } = tokenData;\n\n\t\t\tconst auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n\n\t\t\taxios\n\t\t\t\t.get(auth0UserUrl, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tAuthorization: `Bearer ${this.getAccessToken()}`\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tresolve(response.data);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.warn('Cannot retrieve user data', error);\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t};\n\n\tupdateUserData = userMetadata => {\n\t\tconst tokenData = this.getTokenData();\n\t\tconst { sub: userId } = tokenData;\n\n\t\tconst auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n\t\tconst dataObj = JSON.stringify({ user_metadata: userMetadata });\n\n\t\treturn axios.patch(auth0UserUrl, dataObj, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${this.getAccessToken()}`\n\t\t\t}\n\t\t});\n\t};\n\n\tgetAccessToken = () => {\n\t\treturn localStorage.getItem('access_token');\n\t};\n\n\tgetIdToken = () => {\n\t\treturn window.localStorage.getItem('id_token');\n\t};\n\n\tgetTokenData = () => {\n\t\tconst token = this.getIdToken();\n\t\tconst decoded = jwtDecode(token);\n\t\tif (!decoded) {\n\t\t\treturn null;\n\t\t}\n\t\treturn decoded;\n\t};\n}\n\nconst instance = new Auth0Service();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}
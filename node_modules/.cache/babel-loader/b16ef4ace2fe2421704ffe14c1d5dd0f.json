{"ast":null,"code":"var _jsxFileName = \"/Users/mozcan/Desktop/UK/gasbroker-front-end/src/app/auth/Auth.js\";\nimport FuseSplashScreen from '@fuse/core/FuseSplashScreen';\nimport auth0Service from 'app/services/auth0Service';\nimport firebaseService from 'app/services/firebaseService';\nimport jwtService from 'app/services/jwtService';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { hideMessage, showMessage } from 'app/store/fuse/messageSlice';\nimport { setUserDataFirebase, setUserDataAuth0, setUserData, logoutUser } from './store/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      waitAuthCheck: true\n    };\n\n    this.jwtCheck = () => new Promise(resolve => {\n      jwtService.on('onAutoLogin', () => {\n        this.props.showMessage({\n          message: 'Logging in with JWT'\n        });\n        /**\n         * Sign in and retrieve user data from Api\n         */\n\n        jwtService.signInWithToken().then(user => {\n          this.props.setUserData(user);\n          resolve();\n          this.props.showMessage({\n            message: 'Logged in with JWT'\n          });\n        }).catch(error => {\n          this.props.showMessage({\n            message: error.message\n          });\n          resolve();\n        });\n      });\n      jwtService.on('onAutoLogout', message => {\n        if (message) {\n          this.props.showMessage({\n            message\n          });\n        }\n\n        this.props.logout();\n        resolve();\n      });\n      jwtService.on('onNoAccessToken', () => {\n        resolve();\n      });\n      jwtService.init();\n      return Promise.resolve();\n    });\n\n    this.auth0Check = () => new Promise(resolve => {\n      auth0Service.init(success => {\n        if (!success) {\n          resolve();\n        }\n      });\n\n      if (auth0Service.isAuthenticated()) {\n        this.props.showMessage({\n          message: 'Logging in with Auth0'\n        });\n        /**\n         * Retrieve user data from Auth0\n         */\n\n        auth0Service.getUserData().then(tokenData => {\n          this.props.setUserDataAuth0(tokenData);\n          resolve();\n          this.props.showMessage({\n            message: 'Logged in with Auth0'\n          });\n        });\n      } else {\n        resolve();\n      }\n\n      return Promise.resolve();\n    });\n\n    this.firebaseCheck = () => new Promise(resolve => {\n      firebaseService.init(success => {\n        if (!success) {\n          resolve();\n        }\n      });\n      firebaseService.onAuthStateChanged(authUser => {\n        if (authUser) {\n          this.props.showMessage({\n            message: 'Logging in with Firebase'\n          });\n          /**\n           * Retrieve user data from Firebase\n           */\n\n          firebaseService.getUserData(authUser.uid).then(user => {\n            this.props.setUserDataFirebase(user, authUser);\n            resolve();\n            this.props.showMessage({\n              message: 'Logged in with Firebase'\n            });\n          }, error => {\n            resolve();\n          });\n        } else {\n          resolve();\n        }\n      });\n      return Promise.resolve();\n    });\n  }\n\n  componentDidMount() {\n    return Promise.all([// Comment the lines which you do not use\n      // this.firebaseCheck(),\n      // this.auth0Check(),\n      // this.jwtCheck()\n    ]).then(() => {\n      this.setState({\n        waitAuthCheck: false\n      });\n    });\n  }\n\n  render() {\n    return this.state.waitAuthCheck ? /*#__PURE__*/_jsxDEV(FuseSplashScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.children\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    logout: logoutUser,\n    setUserData,\n    setUserDataAuth0,\n    setUserDataFirebase,\n    showMessage,\n    hideMessage\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/app/auth/Auth.js"],"names":["FuseSplashScreen","auth0Service","firebaseService","jwtService","Component","connect","bindActionCreators","hideMessage","showMessage","setUserDataFirebase","setUserDataAuth0","setUserData","logoutUser","Auth","state","waitAuthCheck","jwtCheck","Promise","resolve","on","props","message","signInWithToken","then","user","catch","error","logout","init","auth0Check","success","isAuthenticated","getUserData","tokenData","firebaseCheck","onAuthStateChanged","authUser","uid","componentDidMount","all","setState","render","children","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import FuseSplashScreen from '@fuse/core/FuseSplashScreen';\nimport auth0Service from 'app/services/auth0Service';\nimport firebaseService from 'app/services/firebaseService';\nimport jwtService from 'app/services/jwtService';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { hideMessage, showMessage } from 'app/store/fuse/messageSlice';\n\nimport { setUserDataFirebase, setUserDataAuth0, setUserData, logoutUser } from './store/userSlice';\n\nclass Auth extends Component {\n\tstate = {\n\t\twaitAuthCheck: true\n\t};\n\n\tcomponentDidMount() {\n\t\treturn Promise.all([\n\t\t\t// Comment the lines which you do not use\n\t\t\t// this.firebaseCheck(),\n\t\t\t// this.auth0Check(),\n\t\t\t// this.jwtCheck()\n\t\t]).then(() => {\n\t\t\tthis.setState({ waitAuthCheck: false });\n\t\t});\n\t}\n\n\tjwtCheck = () =>\n\t\tnew Promise(resolve => {\n\t\t\tjwtService.on('onAutoLogin', () => {\n\t\t\t\tthis.props.showMessage({ message: 'Logging in with JWT' });\n\n\t\t\t\t/**\n\t\t\t\t * Sign in and retrieve user data from Api\n\t\t\t\t */\n\t\t\t\tjwtService\n\t\t\t\t\t.signInWithToken()\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tthis.props.setUserData(user);\n\n\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\tthis.props.showMessage({ message: 'Logged in with JWT' });\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tthis.props.showMessage({ message: error.message });\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tjwtService.on('onAutoLogout', message => {\n\t\t\t\tif (message) {\n\t\t\t\t\tthis.props.showMessage({ message });\n\t\t\t\t}\n\n\t\t\t\tthis.props.logout();\n\n\t\t\t\tresolve();\n\t\t\t});\n\n\t\t\tjwtService.on('onNoAccessToken', () => {\n\t\t\t\tresolve();\n\t\t\t});\n\n\t\t\tjwtService.init();\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\n\tauth0Check = () =>\n\t\tnew Promise(resolve => {\n\t\t\tauth0Service.init(success => {\n\t\t\t\tif (!success) {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (auth0Service.isAuthenticated()) {\n\t\t\t\tthis.props.showMessage({ message: 'Logging in with Auth0' });\n\n\t\t\t\t/**\n\t\t\t\t * Retrieve user data from Auth0\n\t\t\t\t */\n\t\t\t\tauth0Service.getUserData().then(tokenData => {\n\t\t\t\t\tthis.props.setUserDataAuth0(tokenData);\n\n\t\t\t\t\tresolve();\n\n\t\t\t\t\tthis.props.showMessage({ message: 'Logged in with Auth0' });\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\n\tfirebaseCheck = () =>\n\t\tnew Promise(resolve => {\n\t\t\tfirebaseService.init(success => {\n\t\t\t\tif (!success) {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfirebaseService.onAuthStateChanged(authUser => {\n\t\t\t\tif (authUser) {\n\t\t\t\t\tthis.props.showMessage({ message: 'Logging in with Firebase' });\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Retrieve user data from Firebase\n\t\t\t\t\t */\n\t\t\t\t\tfirebaseService.getUserData(authUser.uid).then(\n\t\t\t\t\t\tuser => {\n\t\t\t\t\t\t\tthis.props.setUserDataFirebase(user, authUser);\n\n\t\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\t\tthis.props.showMessage({ message: 'Logged in with Firebase' });\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\n\trender() {\n\t\treturn this.state.waitAuthCheck ? <FuseSplashScreen /> : <>{this.props.children}</>;\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators(\n\t\t{\n\t\t\tlogout: logoutUser,\n\t\t\tsetUserData,\n\t\t\tsetUserDataAuth0,\n\t\t\tsetUserDataFirebase,\n\t\t\tshowMessage,\n\t\t\thideMessage\n\t\t},\n\t\tdispatch\n\t);\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}
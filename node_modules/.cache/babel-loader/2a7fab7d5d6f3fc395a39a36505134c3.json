{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createReducer from './rootReducer';\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').default;\n\n    store.replaceReducer(newRootReducer.createReducer());\n  });\n}\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  const {\n    createLogger\n  } = require(`redux-logger`);\n\n  const logger = createLogger({\n    collapsed: (getState, action, logEntry) => !logEntry.error\n  });\n  middlewares.push(logger);\n}\n\nconst store = configureStore({\n  reducer: createReducer(),\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false\n  }).concat(middlewares),\n  devTools: process.env.NODE_ENV === 'development'\n});\nstore.asyncReducers = {};\nexport const injectReducer = (key, reducer) => {\n  if (store.asyncReducers[key]) {\n    return false;\n  }\n\n  store.asyncReducers[key] = reducer;\n  store.replaceReducer(createReducer(store.asyncReducers));\n  return store;\n};\nexport default store;","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/app/store/index.js"],"names":["configureStore","createReducer","process","env","NODE_ENV","module","hot","accept","newRootReducer","require","default","store","replaceReducer","middlewares","createLogger","logger","collapsed","getState","action","logEntry","error","push","reducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","concat","devTools","asyncReducers","injectReducer","key"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,aAAP,MAA0B,eAA1B;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CC,MAAM,CAACC,GAArD,EAA0D;AACzDD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,eAAlB,EAAmC,MAAM;AACxC,UAAMC,cAAc,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,OAAhD;;AACAC,IAAAA,KAAK,CAACC,cAAN,CAAqBJ,cAAc,CAACP,aAAf,EAArB;AACA,GAHD;AAIA;;AAED,MAAMY,WAAW,GAAG,EAApB;;AAEA,IAAIX,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC3C,QAAM;AAAEU,IAAAA;AAAF,MAAmBL,OAAO,CAAE,cAAF,CAAhC;;AACA,QAAMM,MAAM,GAAGD,YAAY,CAAC;AAAEE,IAAAA,SAAS,EAAE,CAACC,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,KAAgC,CAACA,QAAQ,CAACC;AAAvD,GAAD,CAA3B;AAEAP,EAAAA,WAAW,CAACQ,IAAZ,CAAiBN,MAAjB;AACA;;AAED,MAAMJ,KAAK,GAAGX,cAAc,CAAC;AAC5BsB,EAAAA,OAAO,EAAErB,aAAa,EADM;AAE5BsB,EAAAA,UAAU,EAAEC,oBAAoB,IAC/BA,oBAAoB,CAAC;AACpBC,IAAAA,cAAc,EAAE,KADI;AAEpBC,IAAAA,iBAAiB,EAAE;AAFC,GAAD,CAApB,CAGGC,MAHH,CAGUd,WAHV,CAH2B;AAO5Be,EAAAA,QAAQ,EAAE1B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAPP,CAAD,CAA5B;AAUAO,KAAK,CAACkB,aAAN,GAAsB,EAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMT,OAAN,KAAkB;AAC9C,MAAIX,KAAK,CAACkB,aAAN,CAAoBE,GAApB,CAAJ,EAA8B;AAC7B,WAAO,KAAP;AACA;;AACDpB,EAAAA,KAAK,CAACkB,aAAN,CAAoBE,GAApB,IAA2BT,OAA3B;AACAX,EAAAA,KAAK,CAACC,cAAN,CAAqBX,aAAa,CAACU,KAAK,CAACkB,aAAP,CAAlC;AACA,SAAOlB,KAAP;AACA,CAPM;AASP,eAAeA,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport createReducer from './rootReducer';\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n\tmodule.hot.accept('./rootReducer', () => {\n\t\tconst newRootReducer = require('./rootReducer').default;\n\t\tstore.replaceReducer(newRootReducer.createReducer());\n\t});\n}\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n\tconst { createLogger } = require(`redux-logger`);\n\tconst logger = createLogger({ collapsed: (getState, action, logEntry) => !logEntry.error });\n\n\tmiddlewares.push(logger);\n}\n\nconst store = configureStore({\n\treducer: createReducer(),\n\tmiddleware: getDefaultMiddleware =>\n\t\tgetDefaultMiddleware({\n\t\t\timmutableCheck: false,\n\t\t\tserializableCheck: false\n\t\t}).concat(middlewares),\n\tdevTools: process.env.NODE_ENV === 'development'\n});\n\nstore.asyncReducers = {};\n\nexport const injectReducer = (key, reducer) => {\n\tif (store.asyncReducers[key]) {\n\t\treturn false;\n\t}\n\tstore.asyncReducers[key] = reducer;\n\tstore.replaceReducer(createReducer(store.asyncReducers));\n\treturn store;\n};\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
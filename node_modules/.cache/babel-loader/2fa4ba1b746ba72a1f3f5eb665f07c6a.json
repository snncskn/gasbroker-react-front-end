{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n  _s();\n\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef(); // Store current value in ref\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nexport default usePrevious;","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/@fuse/hooks/usePrevious.js"],"names":["useEffect","useRef","usePrevious","value","ref","current"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC3B;AACA;AACA,QAAMC,GAAG,GAAGH,MAAM,EAAlB,CAH2B,CAK3B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACA,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAN2B,CAQd;AAEb;;AACA,SAAOC,GAAG,CAACC,OAAX;AACA;;GAZQH,W;;AAcT,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n\t// The ref object is a generic container whose current property is mutable ...\n\t// ... and can hold any value, similar to an instance property on a class\n\tconst ref = useRef();\n\n\t// Store current value in ref\n\tuseEffect(() => {\n\t\tref.current = value;\n\t}, [value]); // Only re-run if value changes\n\n\t// Return previous value (happens before update in useEffect above)\n\treturn ref.current;\n}\n\nexport default usePrevious;\n"]},"metadata":{},"sourceType":"module"}
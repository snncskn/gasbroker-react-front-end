{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport _ from '@lodash';\nimport { useCallback, useState } from 'react';\n\nfunction useForm(initialState, onSubmit) {\n  _s();\n\n  const [form, setForm] = useState(initialState);\n  const handleChange = useCallback(event => {\n    event.persist();\n    setForm(_form => _.setIn({ ..._form\n    }, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n  }, []);\n  const resetForm = useCallback(() => {\n    if (!_.isEqual(initialState, form)) {\n      setForm(initialState);\n    }\n  }, [form, initialState]);\n  const setInForm = useCallback((name, value) => {\n    setForm(_form => _.setIn(_form, name, value));\n  }, []);\n  const handleSubmit = useCallback(event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (onSubmit) {\n      onSubmit();\n    }\n  }, [onSubmit]);\n  return {\n    form,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    setForm,\n    setInForm\n  };\n}\n\n_s(useForm, \"VGk107yCffuWV0r659jvLYhZqEg=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/mozcan/Desktop/UK/gasbroker-front-end/src/@fuse/hooks/useForm.js"],"names":["_","useCallback","useState","useForm","initialState","onSubmit","form","setForm","handleChange","event","persist","_form","setIn","target","name","type","checked","value","resetForm","isEqual","setInForm","handleSubmit","preventDefault"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,CAAiBC,YAAjB,EAA+BC,QAA/B,EAAyC;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACE,YAAD,CAAhC;AAEA,QAAMI,YAAY,GAAGP,WAAW,CAACQ,KAAK,IAAI;AACzCA,IAAAA,KAAK,CAACC,OAAN;AACAH,IAAAA,OAAO,CAACI,KAAK,IACZX,CAAC,CAACY,KAAF,CACC,EAAE,GAAGD;AAAL,KADD,EAECF,KAAK,CAACI,MAAN,CAAaC,IAFd,EAGCL,KAAK,CAACI,MAAN,CAAaE,IAAb,KAAsB,UAAtB,GAAmCN,KAAK,CAACI,MAAN,CAAaG,OAAhD,GAA0DP,KAAK,CAACI,MAAN,CAAaI,KAHxE,CADM,CAAP;AAOA,GAT+B,EAS7B,EAT6B,CAAhC;AAWA,QAAMC,SAAS,GAAGjB,WAAW,CAAC,MAAM;AACnC,QAAI,CAACD,CAAC,CAACmB,OAAF,CAAUf,YAAV,EAAwBE,IAAxB,CAAL,EAAoC;AACnCC,MAAAA,OAAO,CAACH,YAAD,CAAP;AACA;AACD,GAJ4B,EAI1B,CAACE,IAAD,EAAOF,YAAP,CAJ0B,CAA7B;AAMA,QAAMgB,SAAS,GAAGnB,WAAW,CAAC,CAACa,IAAD,EAAOG,KAAP,KAAiB;AAC9CV,IAAAA,OAAO,CAACI,KAAK,IAAIX,CAAC,CAACY,KAAF,CAAQD,KAAR,EAAeG,IAAf,EAAqBG,KAArB,CAAV,CAAP;AACA,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,QAAMI,YAAY,GAAGpB,WAAW,CAC/BQ,KAAK,IAAI;AACR,QAAIA,KAAJ,EAAW;AACVA,MAAAA,KAAK,CAACa,cAAN;AACA;;AACD,QAAIjB,QAAJ,EAAc;AACbA,MAAAA,QAAQ;AACR;AACD,GAR8B,EAS/B,CAACA,QAAD,CAT+B,CAAhC;AAYA,SAAO;AACNC,IAAAA,IADM;AAENE,IAAAA,YAFM;AAGNa,IAAAA,YAHM;AAINH,IAAAA,SAJM;AAKNX,IAAAA,OALM;AAMNa,IAAAA;AANM,GAAP;AAQA;;GA5CQjB,O;;AA8CT,eAAeA,OAAf","sourcesContent":["import _ from '@lodash';\nimport { useCallback, useState } from 'react';\n\nfunction useForm(initialState, onSubmit) {\n\tconst [form, setForm] = useState(initialState);\n\n\tconst handleChange = useCallback(event => {\n\t\tevent.persist();\n\t\tsetForm(_form =>\n\t\t\t_.setIn(\n\t\t\t\t{ ..._form },\n\t\t\t\tevent.target.name,\n\t\t\t\tevent.target.type === 'checkbox' ? event.target.checked : event.target.value\n\t\t\t)\n\t\t);\n\t}, []);\n\n\tconst resetForm = useCallback(() => {\n\t\tif (!_.isEqual(initialState, form)) {\n\t\t\tsetForm(initialState);\n\t\t}\n\t}, [form, initialState]);\n\n\tconst setInForm = useCallback((name, value) => {\n\t\tsetForm(_form => _.setIn(_form, name, value));\n\t}, []);\n\n\tconst handleSubmit = useCallback(\n\t\tevent => {\n\t\t\tif (event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\tif (onSubmit) {\n\t\t\t\tonSubmit();\n\t\t\t}\n\t\t},\n\t\t[onSubmit]\n\t);\n\n\treturn {\n\t\tform,\n\t\thandleChange,\n\t\thandleSubmit,\n\t\tresetForm,\n\t\tsetForm,\n\t\tsetInForm\n\t};\n}\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}
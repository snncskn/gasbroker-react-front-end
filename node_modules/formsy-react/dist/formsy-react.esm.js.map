{"version":3,"file":"formsy-react.esm.js","sources":["../src/utils.ts","../src/validationRules.ts","../src/FormsyContext.ts","../src/withFormsy.ts","../src/Formsy.ts"],"sourcesContent":["import { isPlainObject } from 'lodash';\n\nimport { ValidationError, Validations, Values } from './interfaces';\n\nexport function isArray(value: unknown): value is unknown[] {\n  return Array.isArray(value);\n}\n\nexport function isObject(value: unknown): value is object {\n  return isPlainObject(value);\n}\n\nexport function isTypeUndefined(value: unknown): value is undefined {\n  return typeof value === 'undefined';\n}\n\nexport function isDate(value: unknown): value is Date {\n  return value instanceof Date;\n}\n\nexport function isFunction(value: unknown): value is Function {\n  return value !== null && typeof value === 'function';\n}\n\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\nexport function isRegex(value: unknown): value is RegExp {\n  return value instanceof RegExp;\n}\n\nexport function isValueStringEmpty(value: string): boolean {\n  return value === '';\n}\n\nexport function isValueNullOrUndefined(value: unknown): boolean {\n  return value === null || value === undefined;\n}\n\nexport function isValueUndefined(value: unknown): boolean {\n  return value === undefined;\n}\n\nexport function noop() {\n  // do nothing.\n}\n\nexport function protectAgainstParamReassignment(value: unknown) {\n  // Clone objects to avoid accidental param reassignment\n  if (isObject(value)) return { ...value };\n  if (isArray(value)) return [...value];\n  return value;\n}\n\nexport function isSame(a: unknown, b: unknown) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every((item, index) => isSame(item, b[index]));\n  }\n\n  if (isFunction(a) && isFunction(b)) {\n    return a.toString() === b.toString();\n  }\n\n  if (isDate(a) && isDate(b)) {\n    return a.toString() === b.toString();\n  }\n\n  if (isObject(a) && isObject(b)) {\n    if (Object.keys(a).length !== Object.keys(b).length) {\n      return false;\n    }\n\n    return Object.keys(a).every((key) => isSame(a[key], b[key]));\n  }\n\n  if (isRegex(a) && isRegex(b)) {\n    return a.toString() === b.toString();\n  }\n\n  return a === b;\n}\n\ninterface RulesResult {\n  errors: ValidationError[];\n  failed: string[];\n  success: string[];\n}\n\nexport function runRules<V>(\n  value: V,\n  currentValues: Values,\n  validations: Validations<V>,\n  validationRules: Validations<V>,\n) {\n  const results: RulesResult = {\n    errors: [],\n    failed: [],\n    success: [],\n  };\n\n  Object.keys(validations).forEach((validationName) => {\n    const validationsVal = validations[validationName];\n    const validationRulesVal = validationRules[validationName];\n    const addToResults = (validation) => {\n      if (isString(validation)) {\n        results.errors.push(validation);\n        results.failed.push(validationName);\n      } else if (!validation) {\n        results.failed.push(validationName);\n      } else {\n        results.success.push(validationName);\n      }\n    };\n\n    if (validationRulesVal && isFunction(validationsVal)) {\n      throw new Error(`Formsy does not allow you to override default validations: ${validationName}`);\n    }\n\n    if (!validationRulesVal && !isFunction(validationsVal)) {\n      throw new Error(`Formsy does not have the validation rule: ${validationName}`);\n    }\n\n    if (isFunction(validationsVal)) {\n      return addToResults(validationsVal(currentValues, value));\n    }\n\n    return addToResults(validationRulesVal(currentValues, value, validationsVal));\n  });\n\n  return results;\n}\n\nexport function throttle(callback, interval) {\n  let enableCall = true;\n\n  return function (...args) {\n    if (!enableCall) return;\n\n    enableCall = false;\n    callback.apply(this, args);\n    setTimeout(() => (enableCall = true), interval);\n  };\n}\n","import { ValidationFunction, Values } from './interfaces';\nimport {\n  isNumber,\n  isString,\n  isTypeUndefined,\n  isValueNullOrUndefined,\n  isValueStringEmpty,\n  isValueUndefined,\n} from './utils';\n\nexport function isExisty<V>(value: V) {\n  return !isValueNullOrUndefined(value);\n}\n\nexport function isEmpty<V>(value: V) {\n  if (isString(value)) {\n    return isValueStringEmpty(value);\n  }\n  if (isTypeUndefined(value)) {\n    return false;\n  }\n  return isValueUndefined(value);\n}\n\nexport function isDefaultRequiredValue(value: unknown) {\n  return isString(value) ? isValueStringEmpty(value) : isValueNullOrUndefined(value);\n}\n\nexport function matchRegexp<V>(_values: Values, value: V, regexp: RegExp) {\n  return !isExisty(value) || isEmpty(value) || regexp.test(`${value}`);\n}\n\ninterface Validations<V> {\n  [key: string]: ValidationFunction<V>;\n}\n\nconst REGEX_PATTERNS = {\n  ALPHA: /^[A-Z]+$/i,\n  ALPHANUMERIC: /^[0-9A-Z]+$/i,\n  EMAIL: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i, // from http://emailregex.com/\n  FLOAT: /^(?:[-+]?(?:\\d+))?(?:\\.\\d*)?(?:[eE][+-]?(?:\\d+))?$/,\n  INT: /^(?:[-+]?(?:0|[1-9]\\d*))$/,\n  NUMERIC: /^[-+]?(?:\\d*[.])?\\d+$/,\n  SPECIAL_WORDS: /^[\\sA-ZÀ-ÖØ-öø-ÿ]+$/i,\n  URL: /^(?:\\w+:)?\\/\\/([^\\s.]+\\.\\S{2}|localhost[:?\\d]*)\\S*$/i,\n  WORDS: /^[A-Z\\s]+$/i,\n};\n\nconst validations: Validations<any> = {\n  equals: <V>(_values, value: V, eql: V) => !isExisty(value) || isEmpty(value) || value === eql,\n  equalsField: <V>(values, value: V, field: string) => value === values[field],\n  isAlpha: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.ALPHA),\n  isAlphanumeric: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.ALPHANUMERIC),\n  isDefaultRequiredValue: <V>(_values, value: V) => isDefaultRequiredValue(value),\n  isEmail: (values, value: string) => matchRegexp(values, value, REGEX_PATTERNS.EMAIL),\n  isEmptyString: (_values, value: string) => isEmpty(value),\n  isExisty: <V>(_values, value: V) => isExisty(value),\n  isFalse: (_values, value: boolean | string) => value === false,\n  isFloat: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.FLOAT),\n  isInt: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.INT),\n  isLength: (_values, value: string, length: number) => !isExisty(value) || isEmpty(value) || value.length === length,\n  isNumeric: <V>(values, value: V) => isNumber(value) || matchRegexp(values, value, REGEX_PATTERNS.NUMERIC),\n  isSpecialWords: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.SPECIAL_WORDS),\n  isTrue: (_values, value: boolean | string) => value === true,\n  isUndefined: <V>(_values, value: V) => isValueUndefined(value),\n  isUrl: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.URL),\n  isWords: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.WORDS),\n  matchRegexp,\n  maxLength: (_values, value: string, length: number) => !isExisty(value) || value.length <= length,\n  minLength: (_values, value: string, length: number) => !isExisty(value) || isEmpty(value) || value.length >= length,\n};\n\nexport const addValidationRule = <V>(name: string, func: ValidationFunction<V>) => {\n  validations[name] = func;\n};\n\nexport default validations;\n","import React from 'react';\nimport { FormsyContextInterface } from './interfaces';\n\nconst noFormsyErrorMessage = 'Could not find Formsy Context Provider. Did you use withFormsy outside <Formsy />?';\n\nconst throwNoFormsyProvider = () => {\n  // istanbul ignore next\n  throw new Error(noFormsyErrorMessage);\n};\n\nconst defaultValue = {\n  attachToForm: throwNoFormsyProvider,\n  detachFromForm: throwNoFormsyProvider,\n  isFormDisabled: true,\n  isValidValue: throwNoFormsyProvider,\n  validate: throwNoFormsyProvider,\n  runValidation: throwNoFormsyProvider,\n};\n\nexport default React.createContext<FormsyContextInterface>(defaultValue);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport FormsyContext from './FormsyContext';\nimport {\n  ComponentWithStaticAttributes,\n  FormsyContextInterface,\n  RequiredValidation,\n  ValidationError,\n  Validations,\n  WrappedComponentClass,\n} from './interfaces';\n\nimport * as utils from './utils';\nimport { isString } from './utils';\nimport { isDefaultRequiredValue } from './validationRules';\n\n/* eslint-disable react/default-props-match-prop-types */\n\nconst convertValidationsToObject = <V>(validations: false | Validations<V>): Validations<V> => {\n  if (isString(validations)) {\n    return validations.split(/,(?![^{[]*[}\\]])/g).reduce((validationsAccumulator, validation) => {\n      let args: string[] = validation.split(':');\n      const validateMethod: string = args.shift();\n\n      args = args.map((arg) => {\n        try {\n          return JSON.parse(arg);\n        } catch (e) {\n          return arg; // It is a string if it can not parse it\n        }\n      });\n\n      if (args.length > 1) {\n        throw new Error(\n          'Formsy does not support multiple args on string validations. Use object format of validations instead.',\n        );\n      }\n\n      // Avoid parameter reassignment\n      const validationsAccumulatorCopy: Validations<V> = { ...validationsAccumulator };\n      validationsAccumulatorCopy[validateMethod] = args.length ? args[0] : true;\n      return validationsAccumulatorCopy;\n    }, {});\n  }\n\n  return validations || {};\n};\n\nexport const propTypes = {\n  innerRef: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.object, PropTypes.string]),\n  validations: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n};\n\nexport interface WrapperProps<V> {\n  innerRef?: (ref: React.Ref<any>) => void;\n  name: string;\n  required?: RequiredValidation<V>;\n  validationError?: ValidationError;\n  validationErrors?: { [key: string]: ValidationError };\n  validations?: Validations<V>;\n  value?: V;\n}\n\nexport interface WrapperState<V> {\n  [key: string]: unknown;\n  formSubmitted: boolean;\n  isPristine: boolean;\n  isRequired: boolean;\n  isValid: boolean;\n  pristineValue: V;\n  validationError: ValidationError[];\n  value: V;\n}\n\nexport interface InjectedProps<V> {\n  errorMessage: ValidationError;\n  errorMessages: ValidationError[];\n  hasValue: boolean;\n  isFormDisabled: boolean;\n  isFormSubmitted: boolean;\n  isPristine: boolean;\n  isRequired: boolean;\n  isValid: boolean;\n  isValidValue: (value: V) => boolean;\n  ref?: React.Ref<any>;\n  resetValue: () => void;\n  setValidations: (validations: Validations<V>, required: RequiredValidation<V>) => void;\n  setValue: (value: V, validate?: boolean) => void;\n  showError: boolean;\n  showRequired: boolean;\n}\n\nexport interface WrapperInstanceMethods<V> {\n  getErrorMessage: () => null | ValidationError;\n  getErrorMessages: () => ValidationError[];\n  getValue: () => V;\n  isFormDisabled: () => boolean;\n  isFormSubmitted: () => boolean;\n  isValid: () => boolean;\n  isValidValue: (value: V) => boolean;\n  setValue: (value: V, validate?: boolean) => void;\n}\n\nexport type PassDownProps<V> = WrapperProps<V> & InjectedProps<V>;\n\nfunction getDisplayName(component: WrappedComponentClass) {\n  return component.displayName || component.name || (utils.isString(component) ? component : 'Component');\n}\n\nexport default function withFormsy<T, V>(\n  WrappedComponent: React.ComponentType<T & PassDownProps<V>>,\n): React.ComponentType<Omit<T & WrapperProps<V>, keyof InjectedProps<V>>> {\n  class WithFormsyWrapper\n    extends React.Component<T & WrapperProps<V> & FormsyContextInterface, WrapperState<V>>\n    implements WrapperInstanceMethods<V> {\n    public validations?: Validations<V>;\n\n    public requiredValidations?: Validations<V>;\n\n    public static displayName = `Formsy(${getDisplayName(WrappedComponent)})`;\n\n    public static propTypes: any = propTypes;\n\n    public static defaultProps: any = {\n      innerRef: null,\n      required: false,\n      validationError: '',\n      validationErrors: {},\n      validations: null,\n      value: (WrappedComponent as ComponentWithStaticAttributes).defaultValue,\n    };\n\n    public constructor(props) {\n      super(props);\n      const { runValidation, validations, required, value } = props;\n\n      this.state = { value } as any;\n\n      this.setValidations(validations, required);\n\n      this.state = {\n        formSubmitted: false,\n        isPristine: true,\n        pristineValue: props.value,\n        value: props.value,\n        ...runValidation(this, props.value),\n      };\n    }\n\n    public componentDidMount() {\n      const { name, attachToForm } = this.props;\n\n      if (!name) {\n        throw new Error('Form Input requires a name property when used');\n      }\n\n      attachToForm(this);\n    }\n\n    public shouldComponentUpdate(nextProps, nextState) {\n      const { props, state } = this;\n      const isChanged = (a: object, b: object): boolean => Object.keys(a).some((k) => a[k] !== b[k]);\n      const isPropsChanged = isChanged(props, nextProps);\n      const isStateChanged = isChanged(state, nextState);\n\n      return isPropsChanged || isStateChanged;\n    }\n\n    public componentDidUpdate(prevProps) {\n      const { value, validations, required, validate } = this.props;\n\n      // If the value passed has changed, set it. If value is not passed it will\n      // internally update, and this will never run\n      if (!utils.isSame(value, prevProps.value)) {\n        this.setValue(value);\n      }\n\n      // If validations or required is changed, run a new validation\n      if (!utils.isSame(validations, prevProps.validations) || !utils.isSame(required, prevProps.required)) {\n        this.setValidations(validations, required);\n        validate(this);\n      }\n    }\n\n    // Detach it when component unmounts\n    public componentWillUnmount() {\n      const { detachFromForm } = this.props;\n      detachFromForm(this);\n    }\n\n    public getErrorMessage = (): ValidationError | null => {\n      const messages = this.getErrorMessages();\n      return messages.length ? messages[0] : null;\n    };\n\n    public getErrorMessages = (): ValidationError[] => {\n      const { validationError } = this.state;\n\n      if (!this.isValid() || this.showRequired()) {\n        return validationError || [];\n      }\n      return [];\n    };\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public getValue = (): V => this.state.value;\n\n    public setValidations = (validations: Validations<V>, required: RequiredValidation<V>): void => {\n      // Add validations to the store itself as the props object can not be modified\n      this.validations = convertValidationsToObject(validations) || {};\n      this.requiredValidations =\n        required === true ? { isDefaultRequiredValue: required } : convertValidationsToObject(required);\n    };\n\n    // By default, we validate after the value has been set.\n    // A user can override this and pass a second parameter of `false` to skip validation.\n    public setValue = (value: V, validate = true): void => {\n      const { validate: validateForm } = this.props;\n\n      if (!validate) {\n        this.setState({ value });\n      } else {\n        this.setState(\n          {\n            value,\n            isPristine: false,\n          },\n          () => {\n            validateForm(this);\n          },\n        );\n      }\n    };\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public hasValue = () => {\n      const { value } = this.state;\n      return isDefaultRequiredValue(value);\n    };\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isFormDisabled = (): boolean => this.props.isFormDisabled;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isFormSubmitted = (): boolean => this.state.formSubmitted;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isPristine = (): boolean => this.state.isPristine;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isRequired = (): boolean => !!this.props.required;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isValid = (): boolean => this.state.isValid;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isValidValue = (value: V) => this.props.isValidValue(this, value);\n\n    public resetValue = () => {\n      const { pristineValue } = this.state;\n      const { validate } = this.props;\n\n      this.setState(\n        {\n          value: pristineValue,\n          isPristine: true,\n        },\n        () => {\n          validate(this);\n        },\n      );\n    };\n\n    public showError = (): boolean => !this.showRequired() && !this.isValid();\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public showRequired = (): boolean => this.state.isRequired;\n\n    public render() {\n      const { innerRef } = this.props;\n      const propsForElement: T & PassDownProps<V> = {\n        ...this.props,\n        errorMessage: this.getErrorMessage(),\n        errorMessages: this.getErrorMessages(),\n        hasValue: this.hasValue(),\n        isFormDisabled: this.isFormDisabled(),\n        isFormSubmitted: this.isFormSubmitted(),\n        isPristine: this.isPristine(),\n        isRequired: this.isRequired(),\n        isValid: this.isValid(),\n        isValidValue: this.isValidValue,\n        resetValue: this.resetValue,\n        setValidations: this.setValidations,\n        setValue: this.setValue,\n        showError: this.showError(),\n        showRequired: this.showRequired(),\n        value: this.getValue(),\n      };\n\n      if (innerRef) {\n        propsForElement.ref = innerRef;\n      }\n\n      return React.createElement(WrappedComponent, propsForElement);\n    }\n  }\n\n  // eslint-disable-next-line react/display-name\n  return (props) =>\n    React.createElement(FormsyContext.Consumer, null, (contextValue) => {\n      return React.createElement(WithFormsyWrapper, { ...props, ...contextValue });\n    });\n}\n","/* eslint-disable react/no-unused-state, react/default-props-match-prop-types */\nimport { get, has, set } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport FormsyContext from './FormsyContext';\nimport {\n  FormsyContextInterface,\n  IModel,\n  InputComponent,\n  IResetModel,\n  IUpdateInputsWithError,\n  IUpdateInputsWithValue,\n  ValidationError,\n} from './interfaces';\nimport { throttle, isObject, isString } from './utils';\nimport * as utils from './utils';\nimport validationRules from './validationRules';\nimport { PassDownProps } from './withFormsy';\n\ntype FormHTMLAttributesCleaned = Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onChange' | 'onSubmit'>;\n\ntype OnSubmitCallback = (\n  model: IModel,\n  resetModel: IResetModel,\n  updateInputsWithError: IUpdateInputsWithError,\n  event: React.SyntheticEvent<React.FormHTMLAttributes<any>>,\n) => void;\n\ntype FormElementType =\n  | string\n  | React.ComponentType<{\n      onReset?: (e: React.SyntheticEvent) => void;\n      onSubmit?: (e: React.SyntheticEvent) => void;\n      disabled?: boolean;\n      children?: React.ReactChildren;\n    }>;\n\nexport interface FormsyProps extends FormHTMLAttributesCleaned {\n  disabled: boolean;\n  mapping: null | ((model: IModel) => IModel);\n  onChange: (model: IModel, isChanged: boolean) => void;\n  onInvalid: () => void;\n  onReset?: () => void;\n  onSubmit?: OnSubmitCallback;\n  onValidSubmit?: OnSubmitCallback;\n  onInvalidSubmit: OnSubmitCallback;\n  onValid: () => void;\n  preventDefaultSubmit?: boolean;\n  preventExternalInvalidation?: boolean;\n  validationErrors?: null | object;\n  formElement?: FormElementType;\n}\n\nexport interface FormsyState {\n  canChange: boolean;\n  contextValue: FormsyContextInterface;\n  formSubmitted?: boolean;\n  isPristine?: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n}\n\nconst ONE_RENDER_FRAME = 66;\n\nexport class Formsy extends React.Component<FormsyProps, FormsyState> {\n  public inputs: InstanceType<any & PassDownProps<any>>[];\n\n  public emptyArray: any[];\n\n  public prevInputNames: any[] | null = null;\n\n  public static displayName = 'Formsy';\n\n  public static propTypes = {\n    disabled: PropTypes.bool,\n    mapping: PropTypes.func,\n    formElement: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func]),\n    onChange: PropTypes.func,\n    onInvalid: PropTypes.func,\n    onInvalidSubmit: PropTypes.func,\n    onReset: PropTypes.func,\n    onSubmit: PropTypes.func,\n    onValid: PropTypes.func,\n    onValidSubmit: PropTypes.func,\n    preventDefaultSubmit: PropTypes.bool,\n    preventExternalInvalidation: PropTypes.bool,\n    validationErrors: PropTypes.object, // eslint-disable-line\n  };\n\n  public static defaultProps: Partial<FormsyProps> = {\n    disabled: false,\n    mapping: null,\n    onChange: utils.noop,\n    onInvalid: utils.noop,\n    onInvalidSubmit: utils.noop,\n    onReset: utils.noop,\n    onSubmit: utils.noop,\n    onValid: utils.noop,\n    onValidSubmit: utils.noop,\n    preventDefaultSubmit: true,\n    preventExternalInvalidation: false,\n    validationErrors: {},\n    formElement: 'form',\n  };\n\n  private readonly throttledValidateForm: () => void;\n\n  public constructor(props: FormsyProps) {\n    super(props);\n    this.state = {\n      canChange: false,\n      isSubmitting: false,\n      isValid: true,\n      contextValue: {\n        attachToForm: this.attachToForm,\n        detachFromForm: this.detachFromForm,\n        isFormDisabled: props.disabled,\n        isValidValue: this.isValidValue,\n        validate: this.validate,\n        runValidation: this.runValidation,\n      },\n    };\n    this.inputs = [];\n    this.emptyArray = [];\n    this.throttledValidateForm = throttle(this.validateForm, ONE_RENDER_FRAME);\n  }\n\n  public componentDidMount = () => {\n    this.prevInputNames = this.inputs.map((component) => component.props.name);\n    this.validateForm();\n  };\n\n  public componentDidUpdate = (prevProps: FormsyProps) => {\n    const { validationErrors, disabled } = this.props;\n\n    if (validationErrors && isObject(validationErrors) && Object.keys(validationErrors).length > 0) {\n      this.setInputValidationErrors(validationErrors);\n    }\n\n    const newInputNames = this.inputs.map((component) => component.props.name);\n    if (this.prevInputNames && !utils.isSame(this.prevInputNames, newInputNames)) {\n      this.prevInputNames = newInputNames;\n      this.validateForm();\n    }\n\n    // Keep the disabled value in state/context the same as from props\n    if (disabled !== prevProps.disabled) {\n      // eslint-disable-next-line\n      this.setState((state) => ({\n        ...state,\n        contextValue: {\n          ...state.contextValue,\n          isFormDisabled: disabled,\n        },\n      }));\n    }\n  };\n\n  public getCurrentValues = () =>\n    this.inputs.reduce((valueAccumulator, component) => {\n      const {\n        props: { name },\n        state: { value },\n      } = component;\n      // eslint-disable-next-line no-param-reassign\n      valueAccumulator[name] = utils.protectAgainstParamReassignment(value);\n      return valueAccumulator;\n    }, {});\n\n  public getModel = () => {\n    const currentValues = this.getCurrentValues();\n    return this.mapModel(currentValues);\n  };\n\n  public getPristineValues = () =>\n    this.inputs.reduce((valueAccumulator, component) => {\n      const {\n        props: { name, value },\n      } = component;\n      // eslint-disable-next-line no-param-reassign\n      valueAccumulator[name] = utils.protectAgainstParamReassignment(value);\n      return valueAccumulator;\n    }, {});\n\n  public setFormPristine = (isPristine: boolean) => {\n    this.setState({\n      formSubmitted: !isPristine,\n    });\n\n    // Iterate through each component and set it as pristine\n    // or \"dirty\".\n    this.inputs.forEach((component) => {\n      component.setState({\n        formSubmitted: !isPristine,\n        isPristine,\n      });\n    });\n  };\n\n  public setInputValidationErrors = (errors) => {\n    const { preventExternalInvalidation } = this.props;\n    const { isValid } = this.state;\n\n    this.inputs.forEach((component) => {\n      const { name } = component.props;\n      component.setState({\n        isValid: !(name in errors),\n        validationError: isString(errors[name]) ? [errors[name]] : errors[name],\n      });\n    });\n    if (!preventExternalInvalidation && isValid) {\n      this.setFormValidState(false);\n    }\n  };\n\n  public setFormValidState = (allIsValid: boolean) => {\n    const { onValid, onInvalid } = this.props;\n\n    this.setState({\n      isValid: allIsValid,\n    });\n\n    if (allIsValid) {\n      onValid();\n    } else {\n      onInvalid();\n    }\n  };\n\n  public isValidValue = (component, value) => this.runValidation(component, value).isValid;\n\n  // eslint-disable-next-line react/destructuring-assignment\n  public isFormDisabled = () => this.props.disabled;\n\n  public mapModel = (model: IModel): IModel => {\n    const { mapping } = this.props;\n\n    if (mapping) {\n      return mapping(model);\n    }\n\n    const returnModel = {};\n    Object.keys(model).forEach((key) => {\n      set(returnModel, key, model[key]);\n    });\n    return returnModel;\n  };\n\n  public reset = (model?: IModel) => {\n    this.setFormPristine(true);\n    this.resetModel(model);\n  };\n\n  private resetInternal = (event) => {\n    const { onReset } = this.props;\n\n    event.preventDefault();\n    this.reset();\n    if (onReset) {\n      onReset();\n    }\n  };\n\n  // Reset each key in the model to the original / initial / specified value\n  private resetModel: IResetModel = (data) => {\n    this.inputs.forEach((component) => {\n      const { name } = component.props;\n      if (data && has(data, name)) {\n        component.setValue(get(data, name));\n      } else {\n        component.resetValue();\n      }\n    });\n    this.validateForm();\n  };\n\n  // Checks validation on current value or a passed value\n  public runValidation = <V>(\n    component: InputComponent<V>,\n    value = component.state.value,\n  ): { isRequired: boolean; isValid: boolean; validationError: ValidationError[] } => {\n    const { validationErrors } = this.props;\n    const { validationError, validationErrors: componentValidationErrors, name } = component.props;\n    const currentValues = this.getCurrentValues();\n    const validationResults = utils.runRules(value, currentValues, component.validations, validationRules);\n    const requiredResults = utils.runRules(value, currentValues, component.requiredValidations, validationRules);\n    const isRequired = Object.keys(component.requiredValidations).length ? !!requiredResults.success.length : false;\n    const isValid = !validationResults.failed.length && !(validationErrors && validationErrors[component.props.name]);\n\n    return {\n      isRequired,\n      isValid: isRequired ? false : isValid,\n      validationError: (() => {\n        if (isValid && !isRequired) {\n          return this.emptyArray;\n        }\n\n        if (validationResults.errors.length) {\n          return validationResults.errors;\n        }\n\n        if (validationErrors && validationErrors[name]) {\n          return isString(validationErrors[name]) ? [validationErrors[name]] : validationErrors[name];\n        }\n\n        if (isRequired) {\n          const error = componentValidationErrors[requiredResults.success[0]] || validationError;\n          return error ? [error] : null;\n        }\n\n        if (validationResults.failed.length) {\n          return validationResults.failed\n            .map((failed) => (componentValidationErrors[failed] ? componentValidationErrors[failed] : validationError))\n            .filter((x, pos, arr) => arr.indexOf(x) === pos); // remove duplicates\n        }\n\n        // This line is not reachable\n        // istanbul ignore next\n        return undefined;\n      })(),\n    };\n  };\n\n  // Method put on each input component to register\n  // itself to the form\n  public attachToForm = (component) => {\n    if (this.inputs.indexOf(component) === -1) {\n      this.inputs.push(component);\n    }\n\n    const { onChange } = this.props;\n    const { canChange } = this.state;\n\n    // Trigger onChange\n    if (canChange) {\n      onChange(this.getModel(), this.isChanged());\n    }\n\n    // Will be triggered immediately & every one frame rate\n    this.throttledValidateForm();\n  };\n\n  // Method put on each input component to unregister\n  // itself from the form\n  public detachFromForm = <V>(component: InputComponent<V>) => {\n    const componentPos = this.inputs.indexOf(component);\n\n    if (componentPos !== -1) {\n      this.inputs = this.inputs.slice(0, componentPos).concat(this.inputs.slice(componentPos + 1));\n    }\n\n    this.validateForm();\n  };\n\n  // Checks if the values have changed from their initial value\n  public isChanged = () => !utils.isSame(this.getPristineValues(), this.getCurrentValues());\n\n  // Update model, submit to url prop and send the model\n  public submit = (event?: React.SyntheticEvent) => {\n    const { onSubmit, onValidSubmit, onInvalidSubmit, preventDefaultSubmit } = this.props;\n    const { isValid } = this.state;\n\n    if (preventDefaultSubmit && event && event.preventDefault) {\n      event.preventDefault();\n    }\n\n    // Trigger form as not pristine.\n    // If any inputs have not been touched yet this will make them dirty\n    // so validation becomes visible (if based on isPristine)\n    this.setFormPristine(false);\n    const model = this.getModel();\n    onSubmit(model, this.resetModel, this.updateInputsWithError, event);\n\n    if (isValid) {\n      onValidSubmit(model, this.resetModel, this.updateInputsWithError, event);\n    } else {\n      onInvalidSubmit(model, this.resetModel, this.updateInputsWithError, event);\n    }\n  };\n\n  // Go through errors from server and grab the components\n  // stored in the inputs map. Change their state to invalid\n  // and set the serverError message\n  public updateInputsWithError: IUpdateInputsWithError = (errors, invalidate) => {\n    const { preventExternalInvalidation } = this.props;\n    const { isValid } = this.state;\n\n    Object.entries(errors).forEach(([name, error]) => {\n      const component = this.inputs.find((input) => input.props.name === name);\n      if (!component) {\n        throw new Error(\n          `You are trying to update an input that does not exist. Verify errors object with input names. ${JSON.stringify(\n            errors,\n          )}`,\n        );\n      }\n      component.setState({\n        isValid: preventExternalInvalidation,\n        validationError: utils.isString(error) ? [error] : error,\n      });\n    });\n\n    if (invalidate && isValid) {\n      this.setFormValidState(false);\n    }\n  };\n\n  // Set the value of components\n  public updateInputsWithValue: IUpdateInputsWithValue<any> = (data, validate) => {\n    this.inputs.forEach((component) => {\n      const { name } = component.props;\n      if (data && has(data, name)) {\n        component.setValue(get(data, name), validate);\n      }\n    });\n  };\n\n  // Use the binded values and the actual input value to\n  // validate the input and set its state. Then check the\n  // state of the form itself\n  public validate = <V>(component: InputComponent<V>) => {\n    const { onChange } = this.props;\n    const { canChange } = this.state;\n\n    // Trigger onChange\n    if (canChange) {\n      onChange(this.getModel(), this.isChanged());\n    }\n\n    const validationState = this.runValidation<V>(component);\n    // Run through the validations, split them up and call\n    // the validator IF there is a value or it is required\n    component.setState(validationState, this.validateForm);\n  };\n\n  // Validate the form by going through all child input components\n  // and check their state\n  public validateForm = () => {\n    // We need a callback as we are validating all inputs again. This will\n    // run when the last component has set its state\n    const onValidationComplete = () => {\n      const allIsValid = this.inputs.every((component) => component.state.isValid);\n\n      this.setFormValidState(allIsValid);\n\n      // Tell the form that it can start to trigger change events\n      this.setState({\n        canChange: true,\n      });\n    };\n\n    // Run validation again in case affected by other inputs. The\n    // last component validated will run the onValidationComplete callback\n    this.inputs.forEach((component, index) => {\n      const validationState = this.runValidation(component);\n      const isFinalInput = index === this.inputs.length - 1;\n      const callback = isFinalInput ? onValidationComplete : null;\n      component.setState(validationState, callback);\n    });\n\n    // If there are no inputs, set state where form is ready to trigger\n    // change event. New inputs might be added later\n    if (!this.inputs.length) {\n      this.setState(\n        {\n          canChange: true,\n        },\n        onValidationComplete,\n      );\n    }\n  };\n\n  public render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      children,\n      mapping,\n      onChange,\n      onInvalid,\n      onInvalidSubmit,\n      onReset,\n      onSubmit,\n      onValid,\n      onValidSubmit,\n      preventDefaultSubmit,\n      preventExternalInvalidation,\n      validationErrors,\n      disabled,\n      formElement,\n      ...nonFormsyProps\n    } = this.props;\n    const { contextValue } = this.state;\n\n    return React.createElement(\n      FormsyContext.Provider,\n      {\n        value: contextValue,\n      },\n      React.createElement(\n        formElement,\n        {\n          onReset: this.resetInternal,\n          onSubmit: this.submit,\n          ...nonFormsyProps,\n          disabled,\n        },\n        children,\n      ),\n    );\n  }\n}\n"],"names":["isArray","value","Array","isObject","isPlainObject","isTypeUndefined","isDate","Date","isFunction","isString","isNumber","isRegex","RegExp","isValueStringEmpty","isValueNullOrUndefined","undefined","isValueUndefined","noop","protectAgainstParamReassignment","isSame","a","b","length","every","item","index","toString","Object","keys","key","runRules","currentValues","validations","validationRules","results","errors","failed","success","forEach","validationName","validationsVal","validationRulesVal","addToResults","validation","push","Error","throttle","callback","interval","enableCall","args","apply","setTimeout","isExisty","isEmpty","isDefaultRequiredValue","matchRegexp","_values","regexp","test","REGEX_PATTERNS","ALPHA","ALPHANUMERIC","EMAIL","FLOAT","INT","NUMERIC","SPECIAL_WORDS","URL","WORDS","equals","eql","equalsField","values","field","isAlpha","isAlphanumeric","isEmail","isEmptyString","isFalse","isFloat","isInt","isLength","isNumeric","isSpecialWords","isTrue","isUndefined","isUrl","isWords","maxLength","minLength","addValidationRule","name","func","noFormsyErrorMessage","throwNoFormsyProvider","defaultValue","attachToForm","detachFromForm","isFormDisabled","isValidValue","validate","runValidation","React","createContext","convertValidationsToObject","split","reduce","validationsAccumulator","validateMethod","shift","map","arg","JSON","parse","e","validationsAccumulatorCopy","propTypes","innerRef","PropTypes","string","isRequired","required","oneOfType","bool","object","any","getDisplayName","component","displayName","utils","withFormsy","WrappedComponent","WithFormsyWrapper","props","messages","getErrorMessages","validationError","state","isValid","showRequired","requiredValidations","validateForm","setState","isPristine","formSubmitted","pristineValue","setValidations","componentDidMount","shouldComponentUpdate","nextProps","nextState","isChanged","some","k","isPropsChanged","isStateChanged","componentDidUpdate","prevProps","setValue","componentWillUnmount","render","propsForElement","errorMessage","getErrorMessage","errorMessages","hasValue","isFormSubmitted","resetValue","showError","getValue","ref","createElement","Component","validationErrors","FormsyContext","Consumer","contextValue","ONE_RENDER_FRAME","Formsy","prevInputNames","inputs","disabled","setInputValidationErrors","newInputNames","valueAccumulator","getCurrentValues","mapModel","preventExternalInvalidation","setFormValidState","allIsValid","onValid","onInvalid","model","mapping","returnModel","set","setFormPristine","resetModel","event","onReset","preventDefault","reset","data","has","get","componentValidationErrors","validationResults","requiredResults","emptyArray","error","filter","x","pos","arr","indexOf","onChange","canChange","getModel","throttledValidateForm","componentPos","slice","concat","getPristineValues","onSubmit","onValidSubmit","onInvalidSubmit","preventDefaultSubmit","updateInputsWithError","invalidate","entries","find","input","stringify","validationState","onValidationComplete","isFinalInput","isSubmitting","children","formElement","nonFormsyProps","Provider","resetInternal","submit"],"mappings":"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"}